@page
@using global::Pages.EquipmentModelPage
@model EditModel
@{
    ViewData["Title"] = "Ekipman Model Düzenle";
}

<h1>@ViewData["Title"]</h1>

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    var statusClass = Model.StatusMessage.StartsWith("Error") ? "danger" : "success";
    <div class="alert alert-@statusClass alert-dismissible fade show" role="alert">
        @Model.StatusMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="EquipmentModel.Id" />

            <div class="form-group mb-3">
                <label asp-for="EquipmentModel.EquipmentId" class="control-label">Ekipman</label>
                <select asp-for="EquipmentModel.EquipmentId" asp-items="Model.EquipmentList" class="form-select">
                    <option value="">Ekipman Seciniz</option>
                </select>
                <span asp-validation-for="EquipmentModel.EquipmentId" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="EquipmentModel.Brand" class="control-label">Marka</label>
                <input asp-for="EquipmentModel.Brand" class="form-control" />
                <span asp-validation-for="EquipmentModel.Brand" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="EquipmentModel.Model" class="control-label">Model</label>
                <input asp-for="EquipmentModel.Model" class="form-control" />
                <span asp-validation-for="EquipmentModel.Model" class="text-danger"></span>
            </div>

            <div class="card mb-3">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Ozellikler</h5>
                        <button type="button" class="btn btn-primary btn-sm" onclick="addFeatureRow()">Yeni Ekle</button>
                    </div>
                </div>
                <div class="card-body">
                    <div id="featuresContainer">
                        @for (var i = 0; i < Model.Features.Count; i++)
                        {
                            <div class="row mb-2 feature-row">
                                <div class="col-md-4">
                                    <input name="Features[@i].FeatureKey" value="@Model.Features[i].FeatureKey" class="form-control" required />
                                    <input type="hidden" name="Features[@i].Id" value="@Model.Features[i].Id" />
                                </div>
                                <div class="col-md-4">
                                    <input name="Features[@i].FeatureValue" class="form-control" value="@Model.Features[i].FeatureValue" required />
                                </div>
                                <div class="col-md-3">
                                    <select name="Features[@i].UnitId" class="form-select">
                                        <option value="">Birim Seciniz</option>
                                        @foreach (var unit in Model.Units)
                                        {
                                            <option value="@unit.Id" selected="@(Model.Features[i].UnitId == unit.Id)">
                                                @unit.Name
                                            </option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-1">
                                    <button type="button" class="btn btn-danger btn-sm" onclick="removeFeatureRow(this)">Sil</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Kaydet</button>
                <a asp-page="Index" class="btn btn-secondary">Listeye Don</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function addFeatureRow() {
            const container = document.getElementById('featuresContainer');
            const index = container.children.length;

            const row = document.createElement('div');
            row.className = 'row mb-2 feature-row';
            row.innerHTML = `
                <div class="col-md-4">
                    <input name="Features[${index}].FeatureKey" class="form-control" placeholder="Feature Key" required />
                </div>
                <div class="col-md-4">
                    <input name="Features[${index}].FeatureValue" class="form-control" placeholder="Feature Value" required />
                </div>
                <div class="col-md-3">
                    <select name="Features[${index}].UnitId" class="form-select">
                        <option value="">Birim Seçiniz</option>
                            @foreach (var unit in Model.Units)
                            {
                               <option value="@unit.Id">@unit.Name</option>
                            }
                    </select>
                </div>
                <div class="col-md-1">
                    <button type="button" class="btn btn-danger btn-sm" onclick="removeFeatureRow(this)">Sil</button>
                </div>
            `;

            container.appendChild(row);
        }

        function removeFeatureRow(button) {
            const row = button.closest('.feature-row');
            row.remove();
            reindexFeatures();
        }

        function reindexFeatures() {
            const container = document.getElementById('featuresContainer');
            const rows = container.getElementsByClassName('feature-row');

            for (let i = 0; i < rows.length; i++) {
                const inputs = rows[i].querySelectorAll('input, textarea');
                inputs.forEach(input => {
                    const nameParts = input.name.split('.');
                    if (nameParts.length > 1) {
                        input.name = `Features[${i}].${nameParts[1]}`;
                    }
                });
            }
        }
    </script>
} 